/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6-dev at Mon Mar 13 22:17:41 2017. */

#ifndef PB_COMM_PACKET_PB_H_INCLUDED
#define PB_COMM_PACKET_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CommandPacket {
    float NormalizedVoltage;
    float SecondCommand;
/* @@protoc_insertion_point(struct:CommandPacket) */
} CommandPacket;

typedef struct _TelemetryPacket {
    float Position;
    float Velocity;
    float NewTelemetry;
/* @@protoc_insertion_point(struct:TelemetryPacket) */
} TelemetryPacket;

/* Default values for struct fields */

/* Initializer values for message structs */
#define CommandPacket_init_default               {0, 0}
#define TelemetryPacket_init_default             {0, 0, 0}
#define CommandPacket_init_zero                  {0, 0}
#define TelemetryPacket_init_zero                {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CommandPacket_NormalizedVoltage_tag      1
#define CommandPacket_SecondCommand_tag          2
#define TelemetryPacket_Position_tag             1
#define TelemetryPacket_Velocity_tag             2
#define TelemetryPacket_NewTelemetry_tag         3

/* Struct field encoding specification for nanopb */
extern const pb_field_t CommandPacket_fields[3];
extern const pb_field_t TelemetryPacket_fields[4];

/* Maximum encoded size of messages (where known) */
#define CommandPacket_size                       10
#define TelemetryPacket_size                     15

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COMM_PACKET_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
