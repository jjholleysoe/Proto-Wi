/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6-dev at Sun Apr 23 13:56:20 2017. */

#ifndef PB_COMM_PACKET_PB_H_INCLUDED
#define PB_COMM_PACKET_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CommandOrientation {
    float Angle;
    float Heading;
    char Name[15];
/* @@protoc_insertion_point(struct:CommandOrientation) */
} CommandOrientation;

typedef struct _IdValuePairFloat {
    uint32_t Id;
    bool has_Value;
    float Value;
/* @@protoc_insertion_point(struct:IdValuePairFloat) */
} IdValuePairFloat;

typedef struct _CommandPacket {
    bool has_CommandedOrientation;
    CommandOrientation CommandedOrientation;
    pb_size_t Cmds_count;
    IdValuePairFloat Cmds[5];
/* @@protoc_insertion_point(struct:CommandPacket) */
} CommandPacket;

typedef struct _TelemetryPacket {
    float MeasuredAngle;
    float MeasuredHeading;
    pb_size_t Status_count;
    IdValuePairFloat Status[5];
/* @@protoc_insertion_point(struct:TelemetryPacket) */
} TelemetryPacket;

/* Default values for struct fields */

/* Initializer values for message structs */
#define CommandOrientation_init_default          {0, 0, ""}
#define IdValuePairFloat_init_default            {0, false, 0}
#define CommandPacket_init_default               {false, CommandOrientation_init_default, 0, {IdValuePairFloat_init_default, IdValuePairFloat_init_default, IdValuePairFloat_init_default, IdValuePairFloat_init_default, IdValuePairFloat_init_default}}
#define TelemetryPacket_init_default             {0, 0, 0, {IdValuePairFloat_init_default, IdValuePairFloat_init_default, IdValuePairFloat_init_default, IdValuePairFloat_init_default, IdValuePairFloat_init_default}}
#define CommandOrientation_init_zero             {0, 0, ""}
#define IdValuePairFloat_init_zero               {0, false, 0}
#define CommandPacket_init_zero                  {false, CommandOrientation_init_zero, 0, {IdValuePairFloat_init_zero, IdValuePairFloat_init_zero, IdValuePairFloat_init_zero, IdValuePairFloat_init_zero, IdValuePairFloat_init_zero}}
#define TelemetryPacket_init_zero                {0, 0, 0, {IdValuePairFloat_init_zero, IdValuePairFloat_init_zero, IdValuePairFloat_init_zero, IdValuePairFloat_init_zero, IdValuePairFloat_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define CommandOrientation_Angle_tag             1
#define CommandOrientation_Heading_tag           2
#define CommandOrientation_Name_tag              3
#define IdValuePairFloat_Id_tag                  1
#define IdValuePairFloat_Value_tag               2
#define CommandPacket_CommandedOrientation_tag   1
#define CommandPacket_Cmds_tag                   2
#define TelemetryPacket_MeasuredAngle_tag        1
#define TelemetryPacket_MeasuredHeading_tag      2
#define TelemetryPacket_Status_tag               3

/* Struct field encoding specification for nanopb */
extern const pb_field_t CommandOrientation_fields[4];
extern const pb_field_t IdValuePairFloat_fields[3];
extern const pb_field_t CommandPacket_fields[3];
extern const pb_field_t TelemetryPacket_fields[4];

/* Maximum encoded size of messages (where known) */
#define CommandOrientation_size                  27
#define IdValuePairFloat_size                    11
#define CommandPacket_size                       94
#define TelemetryPacket_size                     75

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COMM_PACKET_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
